---
title: "R Notebook"
output:
  html_document:
    df_print: paged
---


```{r}
require(data.table)
require(ggplot2)
require(scales)
require(here)
require(flowCore)
require(dbscan)
require(flowWorkspace)

parent_folder = here::here('..')
```

# Differentiation

## Load Platemaps

```{r}

exh_dir <- here::here('..','Exhaust')

# load platemap filenames
platemap_paths <- data.table(
  filepath= normalizePath(file.path(exh_dir, list.files(
    exh_dir,
    pattern='.*platemap.*csv',
    recursive=TRUE))))

#parse day from file name
platemap_paths[, day := gsub('.*D(\\d+).*', '\\1', filepath)]

# load and merge platemaps
platemaps <- platemap_paths[, fread(file=.BY[[1]]), by=filepath]

# put 0 back into well number (ugh)
platemaps[, well := gsub(' ', '',
  gsub('([A-H])(\\d{1})$', '\\1 0\\2', well))]
```

## Load FCS files

```{r}

exh_fcs_dir <- here::here('..','Exhaust','processed')

# load platemap filenames
fcs_paths <- data.table(
  filepath= normalizePath(file.path(exh_fcs_dir, list.files(
    exh_fcs_dir,
    pattern='.*fcs',
    recursive=TRUE))))

# parse well name
fcs_paths[, well := gsub('.*_([A-H]\\d+).fcs','\\1', filepath)]
fcs_paths[, plate := gsub('.*(\\d+)_[A-H]\\d+.fcs','\\1', filepath)]
fcs_paths[, day := gsub('.*_(\\d+)_\\d+_[A-H]\\d+.fcs','\\1', filepath)]

fcs_dt <- fcs_paths[, 
  as.data.frame(flowCore::exprs(read.FCS(filepath))),
  by=c('well','plate','day')]

channel_map <- list(
  cd8="FJComp-379_28 UV-A",
  tim3="FJComp-450_50 Violet-A",
  gfp="FJComp-515_20 Blue-A",
  zombie="FJComp-586_15 Violet-A",
  myc="FJComp-610_20 YG-A",
  lag3= "FJComp-660_20 Red-A",
  pd1= "FJComp-710_50 Violet-A",
  cd39="FJComp-780_60 Red-A")

# replace column names
chan_names <- data.table(merge(
  names(fcs_dt),
  data.table(
    marker=names(channel_map),
    chan=unlist(channel_map)), 
  by.x='x', by.y='chan',
  all=T))

# fill in original column names
chan_names[is.na(marker), marker := x]

# rename columns and melt
names(fcs_dt) <- chan_names[
  names(fcs_dt), marker, on='x']

# merge unmelted with plate map
fcs_dt[, day := as.numeric(day)]
fcs_dt[, plate := as.numeric(plate)]
fcs_dt <- merge(
  fcs_dt, platemaps,
  on=c('well','day','plate'), all=TRUE)

# flowJo transform 
for (chan_name in c(names(channel_map), 
    'SSC-A','SSC-W','SSC-H','FSC-A','FSC-H','FSC-W')) { 
  fcs_dt[, c(paste0(chan_name,'_t')) := flowJoTrans()(fcs_dt[[chan_name]])] 
}

# CSA and KK cant process all events, so taking max of 20,
#hist(fcs_dt[, .N, by=c('col','row','day','plate')][N > 1]$N)

fcs_sampled <- fcs_dt[variable %in% grep('[^(AHW)]_t$', levels(variable), value=T) & k562 == 'cd19+'][, .SD[sample(.N, min(.N,500))], by=c('variable','donor','day','car')]


fcs_melt_dt <- melt(
  fcs_dt, 
  id.vars=c('well','plate','day','Time','filepath','exp','donor','car','k562','col','row')
)


# # export csv.gz for umap
# write.csv(fcs_dt[, !c('filepath','row','col','Time'), with=FALSE], 
#   file=gzfile(normalizePath(file.path(exh_fcs_dir, 'exh_umap_input.csv.gz'))))
# 
# # write sampled csv for umap
# sample_size <- 5000
# 
# write.csv(fcs_dt[, !c('filepath','row','col','Time'), with=FALSE][,
#   .SD[sample(.N, min(.N, sample_size))], by=c('well', 'plate', 'day')], 
#   file=gzfile(normalizePath(file.path(exh_fcs_dir, 'exh_umap_input_sampled_5k.csv.gz'))))
```

## Discretize marker expression

```{r}

# map day 0 to both plus and minus
map_day_0 <- function(df) {
  return(rbind(
    df[k562!='none'],
    df[k562=='none'][, k562 := 'cd19+'],
    df[k562=='none'][, k562 := 'cd19-']
  ))
}

# marker_pos_threshold <- list(
#   tim3= 0,
#   gfp=0,
#   zombie=0,
#   myc=0,
#   lag3= 0, 
#   pd1= 1.3,
#   cd39=0)

marker_pos_threshold <- list(
  tim3_t= 666,
  gfp_t=1500,
  zombie_t=750,
  myc_t=1400,
  lag3_t= 800, 
  pd1_t= 1400,
  cd39_t= 1250)

total_mfi <- c('cd39_t','myc_t', 'pd1_t')
pos_mfi <- c('tim3_t','gfp_t','lag3_t','cd39_t','pd1_t')
pos_pct <- c('tim3_t','zombie_t','lag3_t','cd39_t', 'pd1_t')

fcs_melt_dt[
  variable %in% names(marker_pos_threshold), 
  marker_pos := value > marker_pos_threshold[as.character(variable)]]

pct_pos_markers <- fcs_melt_dt[variable %in% pos_pct & car != 'untrans',
  list(pct_pos= sum(marker_pos)/.N), 
  by=c('plate','well','day','k562','donor','car','variable')][, 
    list(mean_pct_pos= mean(pct_pos), sd_pct_pos= sd(pct_pos)),
    by=c('day','k562','donor','car','variable')]
pct_pos_markers <- map_day_0(pct_pos_markers)

pos_mfi_markers <- fcs_melt_dt[variable %in% pos_mfi,
  list(pos_mfi_well= mean(flowJoTrans()(value[marker_pos==T])), pos_mfi_well_sd= sd(flowJoTrans()(value[marker_pos==T]))), 
  by=c('plate','well','day','k562','donor','car','variable')][,
    `:=`(mean_mfi_pos= mean(pos_mfi_well), sd_mfi_pos= sd(pos_mfi_well)),  
    by=c('day','k562','donor','car','variable')]
pos_mfi_markers <- map_day_0(pos_mfi_markers)

mfi_markers <- fcs_melt_dt[variable %in% total_mfi,
  list(mfi_well= mean(flowJoTrans()(value[marker_pos==T])),
       mfi_well_sd= sd(flowJoTrans()(value[marker_pos==T]))), 
  by=c('plate','well','day','k562','donor','car','variable')][,
    `:=`(mean_mfi= mean(mfi_well), sd_mfi= sd(mfi_well_sd)),  
    by=c('day','k562','donor','car','variable')]
mfi_markers <- map_day_0(mfi_markers)
```

## pct plots by day and marker

```{r}

pct_pos_markers[, mean_diff_pct_pos := mean_pct_pos-mean(mean_pct_pos), by=c('day','k562','donor','variable')]

ggplot(pct_pos_markers[!is.na(variable)]) + 
    geom_bar(aes(x=car, y=mean_diff_pct_pos, fill=variable), stat='identity') +
    facet_grid(variable+donor~k562+day, scales='free') + 
    theme_minimal(base_size=18) +
    theme(axis.text.x=element_text(angle = 90, hjust = 1)) +
    labs(x='CAR', y='Change in % Subset') +
    geom_linerange(aes(x=car, ymin=mean_diff_pct_pos-sd_pct_pos, ymax=mean_diff_pct_pos-sd_pct_pos)) +
    geom_hline(yintercept=0) +
    geom_vline(xintercept=-Inf)

ggplot(pct_pos_markers[!is.na(variable)]) + 
    geom_bar(aes(x=car, y=mean_diff_pct_pos, fill=variable), stat='identity') +
    facet_grid(donor+k562+variable~day, scales='free') + 
    theme_minimal(base_size=18) +
    theme(axis.text.x=element_text(angle = 90, hjust = 1)) +
    labs(x='CAR', y='Change in % Subset') +
    geom_linerange(aes(x=car, ymin=mean_diff_pct_pos-sd_pct_pos, ymax=mean_diff_pct_pos-sd_pct_pos)) +
    geom_text(
        data=pct_pos_markers[!is.na(variable), 
                                    list(var_mean = mean(mean_pct_pos)), by=c('k562','day','variable')], 
        aes(y=8, x=2, label=round(var_mean,3))) +
    geom_hline(yintercept=0) +
    geom_vline(xintercept=-Inf)


diff_mean_donorpool_dt <- diff_mean_comb_dt[!(car %in% c('KLRG1','untrans')), 
  list(val_mean, car, mean_diff= val_mean-mean(val_mean)), 
  by=c('k562','donor','day','variable')][, list(
    val_mean=mean(val_mean), 
    mean_diff2= mean(mean_diff, na.rm=T), 
    sd_diff2= sd(mean_diff, na.rm=T)), 
  by=c('k562','day','variable','car')]

ggplot(diff_mean_donorpool_dt[!(car %in% c('KLRG1','untrans')) & !is.na(variable)]) + 
    geom_bar(aes(x=car, y=mean_diff2, fill=variable), stat='identity') +
    facet_grid(k562+variable~day, scales='free') + 
    theme_minimal(base_size=18) +
    theme(axis.text.x=element_text(angle = 90, hjust = 1)) +
    labs(x='CAR', y='Change in % Subset') +
    geom_linerange(aes(x=car, ymin=mean_diff2-sd_diff2, ymax=mean_diff2+sd_diff2)) +
    geom_text(
        data=diff_mean_donorpool_dt[!is.na(variable), 
                                    list(var_mean = mean(val_mean)), by=c('k562','day','variable')], 
        aes(y=8, x=2, label=round(var_mean,3))) +
    geom_hline(yintercept=0) +
    geom_vline(xintercept=-Inf)

ggplot(diff_mean_donorpool_dt[!(car %in% c('KLRG1','untrans')) & !is.na(variable) & day == 24]) + 
    geom_bar(aes(x=car, y=mean_diff2, fill=variable), stat='identity') +
    facet_grid(k562+variable~day, scales='free') + 
    theme_minimal(base_size=18) +
    theme(axis.text.x=element_text(angle = 90, hjust = 1)) +
    labs(x='CAR', y='Change in % Subset') +
    geom_linerange(aes(x=car, ymin=mean_diff2-sd_diff2, ymax=mean_diff2+sd_diff2)) +
    geom_text(
        data=diff_mean_donorpool_dt[!is.na(variable) & day == 24, 
                                    list(var_mean = mean(val_mean)), by=c('k562','day','variable')], 
        aes(y=1, x=7, label=round(var_mean,3))) +
    geom_hline(yintercept=0) +
    geom_vline(xintercept=-Inf)
```


## Number of positive markers per cell

```{r}
marker_ct <- fcs_melt_dt[variable %in% c('tim3_t','lag3_t','cd39_t', 'pd1_t'), list(n_pos_marker= sum(marker_pos)), by=c('well','plate','day','Time','car','donor','k562')]

marker_ct[, N := .N, by=c('well','plate','day','car','k562')]

marker_ct <- map_day_0(marker_ct)

marker_freq <- marker_ct[N > 1, data.frame(table(n_pos_marker)), by=c('well','plate','day','car','donor','k562')]

marker_freq[ n_pos_marker != 7, pct := Freq/sum(Freq), by=c('day','car','donor','k562')]

ggplot(marker_freq[k562 != 'none' & n_pos_marker != 7]) + 
  geom_bar(aes(x=car, y=pct, fill=n_pos_marker), stat='identity') + 
  facet_grid(k562 + donor ~ day, scales='free') + 
  scale_y_continuous(expand=c(0,0)) + 
  scale_fill_brewer('Number of Exh.\nMarkers Present', palette='YlOrRd') + 
  theme_minimal() +
  labs(x="CAR", y='Fraction of Cells')

```

## Plots

```{r fig.width=10, fig.height=8}

ggplot(pct_pos_markers,
       aes(x=day, y=mean_pct_pos, 
           ymin=mean_pct_pos-sd_pct_pos, 
           ymax=mean_pct_pos+sd_pct_pos, color=car)) + 
    geom_line() + geom_point() + geom_linerange() +
    facet_grid(variable ~ k562 + donor, scales='free') + 
    scale_color_brewer(palette='Set1') +
    labs(title='Exhaustion: Marker+ Pct. for each CAR', y='Mean MFI', x='Day')

ggplot(pos_mfi_markers,
       aes(x=day, y=mean_mfi_pos, 
           ymin=mean_mfi_pos-sd_mfi_pos, 
           ymax=mean_mfi_pos+sd_mfi_pos, color=car)) + 
    geom_line() + geom_point() + geom_linerange() +
    facet_grid(variable ~ k562 + donor, scales='free') + 
    scale_color_brewer(palette='Set1') +
    labs(title='Exhaustion: Mean MFI of Marker+ for each CAR', y='Mean MFI', x='Day')

ggplot(mfi_markers,
       aes(x=day, y=mean_mfi, 
           ymin=mean_mfi-sd_mfi, 
           ymax=mean_mfi+sd_mfi, color=car)) + 
    geom_line() + geom_point() + geom_linerange() +
    facet_grid(variable ~ k562 + donor, scales='free') + 
    scale_color_brewer(palette='Set1') +
    labs(title='Exhaustion: Mean MFI for each CAR', y='Mean MFI', x='Day')

```

## Plots for Jeff 7/18/19

```{r}
ggplot(pct_pos_markers[variable %in% c('lag3_t','tim3_t','cd39_t','pd1_t') & k562 == 'cd19+' & !is.na(donor)]) + 
    geom_bar(aes(x=car, y=mean_pct_pos, fill=variable), stat='identity') +
    facet_grid(variable+donor~k562+day, scales='free') + 
    theme_minimal(base_size=18) +
    theme(axis.text.x=element_text(angle = 90, hjust = 1)) +
    labs(x='CAR', y='% Positive') +
    geom_linerange(aes(x=car, ymin=mean_pct_pos-sd_pct_pos, ymax=mean_pct_pos+sd_pct_pos)) +
    geom_hline(yintercept=0) +
    geom_vline(xintercept=-Inf)

ggplot(mfi_markers[variable %in% c('pd1_t') & k562 == 'cd19+' & !is.na(donor)]) + 
    geom_point(aes(x=car, y=mean_mfi, fill=variable), stat='identity') +
    facet_grid(variable+donor~k562+day, scales='free') + 
    theme_minimal(base_size=18) +
    theme(axis.text.x=element_text(angle = 90, hjust = 1)) +
    labs(x='CAR', y='MFI') +
    geom_linerange(aes(x=car, ymin=mean_mfi-sd_mfi, ymax=mean_mfi+sd_mfi)) +
    geom_vline(xintercept=-Inf)



fcs_sampled <- fcs_melt_dt[variable %in% grep('[^(AHW)]_t$', levels(variable), value=T) & k562 == 'cd19+'][, .SD[sample(.N, min(.N,500))], by=c('variable','donor','day','car')]

ggplot(fcs_sampled[variable == 'lag3_t']) + 
  geom_density(aes(x=value, color=car)) + 
  facet_grid(variable+donor~day) + 
  scale_color_brewer(palette='Paired') + 
  scale_fill_brewer(palette='Paired') +
  theme_minimal(base_size=25) +
  geom_hline(yintercept=-Inf) +
  geom_vline(xintercept=-Inf)

```



## UMAP

Ran sampled data thru `pynb/exh_umap.ipynb`

(Not running this currently.)

```{r include=F}
# 
# umap_dt <- fread(normalizePath(file.path(exh_fcs_dir, 'exh_umap_out_sampled_hdbscan.csv.gz')))
# 
# # cl <- hdbscan(umap_dt[, list(UMAP_x, UMAP_y)], minPts = 500)
# # umap_dt$cluster <- cl$cluster
# 
# 
# ggplot(umap_dt) + geom_point(aes(x=UMAP_x, y=UMAP_y, color=factor(cluster)))
# 
# cluster_size_cutoff <- 2000
# large_clusters <- umap_dt[, .N, by=cluster][N > cluster_size_cutoff, cluster]
# 
# ggplot(melt(umap_dt, measure.vars=names(channel_map))) + 
#   geom_point(aes(x=UMAP_x, y=UMAP_y, color=asinh(value))) +
#   scale_color_distiller(palette='RdYlBu') +
#   facet_wrap(~variable) +
#   geom_text(data=umap_dt[, list(cl_x=mean(UMAP_x), cl_y=mean(UMAP_y)), by=cluster], 
#     aes(label=cluster, x=cl_x, y=cl_y))
# 
# ggplot(umap_dt[sample(.N, 50000)]) + 
#   geom_point(aes(x=UMAP_x, y=UMAP_y, color=factor(cluster)), size=0.5)
# 
# ggplot(rbind(umap_dt[cluster %in% large_clusters], 
#       umap_dt[!(cluster %in% large_clusters)][, cluster := NA])) +
#   geom_point(aes(x=UMAP_x, y=UMAP_y, color=factor(cluster))) +
#   geom_text(data=umap_dt[, list(cl_x=mean(UMAP_x), cl_y=mean(UMAP_y)), by=cluster], 
#     aes(label=cluster, x=cl_x, y=cl_y))
# 
# # pct day by cluster
# ggplot(umap_dt[, list(day=names(table(day)), pct=as.vector(table(day)/.N)), by=c('cluster')]) + geom_line(aes(x=day, y=pct, color=factor(cluster), group=interaction(cluster)))
# 
# # pct cluster by day
# ggplot(umap_dt[, list(cluster=names(table(cluster)), pct=as.vector(table(cluster)/.N)), by=c('day')]) + geom_line(aes(x=day, y=pct, color=factor(cluster), group=interaction(cluster)))
# 
# # pct cluster by car, relative to other cars
# 
# ggplot(umap_dt[cluster %in% large_clusters, list(cluster=names(table(cluster)), pct=as.vector(table(cluster)/.N)), by=c('car','day')][, pct_diff := pct - mean(pct), by=c('cluster','day')][]) + geom_line(aes(x=day, y=pct_diff, color=cluster)) + facet_wrap(~car)
# 
# 
# ggplot(umap_dt[cluster %in% large_clusters, list(cluster=names(table(cluster)), pct=as.vector(table(cluster)/.N)), by=c('car','day')]) + geom_bar(aes(x=car, y=pct, fill=factor(cluster)), stat='identity', position='stack') + facet_grid(~ day)
# 
# ggplot(umap_dt[cluster %in% large_clusters, list(car=names(table(car)), pct=as.vector(table(car)/.N)), by=c('cluster','day')]) + geom_bar(aes(x=car, y=pct, fill=factor(cluster)), stat='identity', position='stack') + facet_grid(~ day)
# 
# ggplot(umap_dt[cluster %in% large_clusters, list(cluster=names(table(cluster)), pct=as.vector(table(cluster)/.N)), by=c('car','day','donor')][, pct_diff := pct - mean(pct), by=c('car','day','donor')][]) + geom_line(aes(x=day, y=pct_diff, color=cluster)) + facet_grid(donor~car)
```
