---
title: "R Notebook"
output:
  html_document:
    df_print: paged
---

```{r}
require(data.table)
require(ggplot2)
require(scales)
require(here)
require(flowCore)
require(flowWorkspace)
require(ggcyto)
require(RColorBrewer)

parent_folder = here::here('..')
```

# Differentiation

## Load Platemaps


```{r}

diff_dir <- here::here('..','Diff')

# load platemap filenames
platemap_paths <- data.table(
  filepath= normalizePath(file.path(diff_dir, list.files(
    diff_dir,
    pattern='.*platemap.*csv',
    recursive=TRUE))))

#parse day from file name
platemap_paths[, day := gsub('.*D(\\d+).*', '\\1', filepath)]

# load and merge platemaps
platemaps <- platemap_paths[, fread(file=.BY[[1]]), by=filepath]
platemaps[, car := sub('KRLG1','KLRG1',car)]

# put 0 back into well number (ugh)
platemaps[, well := gsub(' ', '',
  gsub('([A-H])(\\d{1})$', '\\1 0\\2', well))]
```



```{r}
#  diff_mean_comb_dt <- rbind(
#     diff_mean_dt[k562 != 'none'],
#     diff_mean_dt[k562=='none'][, k562 := 'cd19-'],
#     diff_mean_dt[k562=='none'][, k562 := 'cd19+'])[!is.na(donor)]
# 
# ggplot(diff_mean_comb_dt) + 
#     geom_bar(aes(x=as.factor(day), y=val_mean, fill=variable), stat='identity', position='stack') +
#     facet_grid(k562+donor~car) + theme_minimal(base_size=18) + labs(x='Day', y='% Subset')
# 
# ggplot(diff_mean_comb_dt[car != 'untrans']) + 
#     geom_bar(aes(x=car, y=val_mean, fill=variable), stat='identity', position='stack') +
#     facet_grid(k562+donor~day) + theme_minimal(base_size=18) + labs(x='Day', y='% Subset') + 
#   coord_flip()
# 
# diff_mean_donorpool_dt <- diff_mean_comb_dt[!(car %in% c('KLRG1','untrans')), 
#   list(val_mean, car, mean_diff= val_mean-mean(val_mean)), 
#   by=c('k562','donor','day','variable')][, list(
#     val_mean=mean(val_mean), 
#     mean_diff2= mean(mean_diff, na.rm=T), 
#     sd_diff2= sd(mean_diff, na.rm=T)), 
#   by=c('k562','day','variable','car')]
# 
# # ggplot(diff_mean_donorpool_dt[car != 'untrans' & !is.na(variable)], aes(x=as.factor(day), y=mean_diff, color=car, group=interaction(car, variable))) + geom_line() + geom_point() + facet_grid(variable ~ k562, scales='free') + geom_hline(yintercept=1) + scale_y_continuous(trans='log2') + coord_cartesian(xlim = NULL, ylim = NULL) + labs(x='Day', y='Fold Change in Population from Mean CAR (not counting KLRG1 & untransduced), log2') + theme_linedraw()
# 
# ggplot(diff_mean_donorpool_dt[!(car %in% c('KLRG1','untrans')) & !is.na(variable)]) + 
#     geom_bar(aes(x=car, y=mean_diff2, fill=variable), stat='identity') +
#     facet_grid(k562+variable~day, scales='free') + 
#     theme_minimal(base_size=18) +
#     theme(axis.text.x=element_text(angle = 90, hjust = 1)) +
#     labs(x='CAR', y='Change in % Subset') +
#     geom_linerange(aes(x=car, ymin=mean_diff2-sd_diff2, ymax=mean_diff2+sd_diff2)) +
#     geom_text(
#         data=diff_mean_donorpool_dt[!is.na(variable), 
#                                     list(var_mean = mean(val_mean)), by=c('k562','day','variable')], 
#         aes(y=8, x=2, label=round(var_mean,3))) +
#     geom_hline(yintercept=0) +
#     geom_vline(xintercept=-Inf)
# 
# ggplot(diff_mean_donorpool_dt[!(car %in% c('KLRG1','untrans')) & !is.na(variable) & day == 24]) + 
#     geom_bar(aes(x=car, y=mean_diff2, fill=variable), stat='identity') +
#     facet_grid(k562+variable~day, scales='free') + 
#     theme_minimal(base_size=18) +
#     theme(axis.text.x=element_text(angle = 90, hjust = 1)) +
#     labs(x='CAR', y='Change in % Subset') +
#     geom_linerange(aes(x=car, ymin=mean_diff2-sd_diff2, ymax=mean_diff2+sd_diff2)) +
#     geom_text(
#         data=diff_mean_donorpool_dt[!is.na(variable) & day == 24, 
#                                     list(var_mean = mean(val_mean)), by=c('k562','day','variable')], 
#         aes(y=1, x=7, label=round(var_mean,3))) +
#     geom_hline(yintercept=0) +
#     geom_vline(xintercept=-Inf)

```

## Load FCS files

```{r}

diff_fcs_dir <- here::here('..','Diff','processed')

# load platemap filenames
fcs_paths <- data.table(
  filepath= normalizePath(file.path(diff_fcs_dir, list.files(
    diff_fcs_dir,
    pattern='.*fcs',
    recursive=TRUE))))

# parse well name
fcs_paths[, well := gsub('.*processed_\\d+_\\d+_([A-H]\\d+).*.fcs','\\1', filepath)]
fcs_paths[, plate := gsub('.*processed_\\d+_(\\d+)_[A-H]\\d+.*.fcs','\\1', filepath)]
fcs_paths[, day := gsub('.*processed_(\\d+)_\\d+_[A-H]\\d+.*.fcs','\\1', filepath)]

fcs_dt <- fcs_paths[, 
  as.data.frame(flowCore::exprs(read.FCS(filepath))),
  by=c('well','plate','day')]

# give each event an ID for tracking after melt
fcs_dt[, event_id := .I, by=c('well','plate','day')]

channel_map <- list(
  cd8="FJComp-450_50 Violet-A",
  ccr7="FJComp-780_60 YG-A",
  gfp="FJComp-515_20 Blue-A",
  zombie="FJComp-586_15 Violet-A",
  myc="FJComp-610_20 YG-A",
  cd45ra= "FJComp-660_20 Red-A",
  cd62l= "FJComp-800_30 Violet-A",
  cd95="FJComp-710_50 Violet-A",
  cd27="FJComp-780_60 Red-A",
  cd45ro="FJComp-379_28 UV-A")

# replace column names
chan_names <- data.table(merge(
  names(fcs_dt),
  data.table(
    marker=names(channel_map),
    chan=unlist(channel_map)), 
  by.x='x', by.y='chan',
  all=T))

# fill in original column names
chan_names[is.na(marker), marker := x]

# rename columns
names(fcs_dt) <- chan_names[
  names(fcs_dt), marker, on='x']

#meltable columns
melt_cols <- c(names(channel_map), 'SSC-A','SSC-W','SSC-H','FSC-A','FSC-H','FSC-W')

# flowJo transform 
for (chan_name in melt_cols) { 
  fcs_dt[, c(paste0(chan_name,'_t')) := flowJoTrans()(fcs_dt[[chan_name]])] }

# add transformed cols to melt
transformed_vars <- paste0(melt_cols,'_t')
melt_cols <- c(melt_cols, transformed_vars)

# merge unmelted with plate map
fcs_dt[, day := as.numeric(day)]
fcs_dt[, plate := as.numeric(plate)]
fcs_dt <- merge(
  fcs_dt, platemaps,
  on=c('well','day','plate'), all=TRUE)

# melt fcs
fcs_melt_dt <- melt(fcs_dt, measure.vars=melt_cols)

# export csv.gz for umap
# write.csv(fcs_dt[, !c('filepath','row','col','Time'), with=FALSE], 
#   file=gzfile(normalizePath(file.path(diff_fcs_dir, 'diff_umap_input.csv.gz'))))

# # write sampled csv for umap
# sample_size <- 5000
# 
# write.csv(fcs_dt[, !c('filepath','row','col','Time'), with=FALSE][,
#   .SD[sample(.N, min(.N, sample_size))], by=c('well', 'plate', 'day')], 
#   file=gzfile(normalizePath(file.path(diff_fcs_dir, 'diff_umap_input_sampled_5k.csv.gz'))))
```

## Myc to GFP

```{r, fig.width=18, fig.height=7}
# quartz(); ggplot(fcs_dt[day==0 & gfp > 10^2.5 & !is.na(car) , list(myc, gfp, car, donor)]) + geom_hex(aes(x=gfp, y=myc)) + facet_wrap(car ~ donor, ncol=2) + scale_x_flowJo_biexp() + scale_y_flowJo_biexp()
# 
# ggplot(fcs_dt[day==0 & gfp > 10^2.5 & !is.na(car) & car != 'untrans', list(myc_to_gfp=mean(myc/gfp)), by=c('car','donor')][, ratio := myc_to_gfp/mean(myc_to_gfp)][, list(mean_ratio=mean(ratio), sd_ratio=sd(ratio)), by=c('car')]) + geom_bar(aes(x=car, y=mean_ratio), stat='identity') + geom_errorbar(aes(x=car, ymin=mean_ratio-sd_ratio, ymax=mean_ratio+sd_ratio, width=0.4))

mfi_myc_summ <- melt(fcs_dt[gfp > 10^2.5 & !is.na(car) & car != 'untrans', list(
  myc_to_gfp=mean(myc/gfp),
  gfp=mean(gfp_t),
  myc=mean(myc_t)),
  by=c('car','donor','day','k562')], id.vars=c('car','donor','day','k562'))[,
    value_norm := value/mean(value), by=c('variable','donor')][,
      list(value_mean = mean(value_norm), value_sd = sd(value_norm)), by=c('car','day','k562','variable')]

per_car <- ggplot(mfi_myc_summ, aes(
    x=car, y=value_mean, 
    ymin=value_mean-value_sd, ymax=value_mean+value_sd,
    fill=k562)) + 
  geom_bar(stat='identity', position=position_dodge()) + 
  geom_errorbar(position=position_dodge(width=0.75), width=0.5) + 
  facet_grid(variable~day, scales='free') +
    theme_minimal(base_size = 18) + 
  labs(y='Relative Expression',x='CAR', title='Myc and GFP by CAR') +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

per_day <- ggplot(rbind(
    mfi_myc_summ[k562 !='none'],
    mfi_myc_summ[k562 =='none'][, k562 := 'cd19+'],
    mfi_myc_summ[k562 =='none'][, k562 := 'cd19-']), 
    aes(
      x=day, y=value_mean, 
      ymin=value_mean-value_sd, ymax=value_mean+value_sd, 
      color=car)) + 
  geom_point() + geom_line() + geom_linerange() +
  scale_color_brewer(palette='Paired') +
  facet_grid(k562~variable) +
  theme_minimal(base_size = 18) +
  labs(y='Relative Expression', x='Day', title='Myc and GFP over time')

library(cowplot)
plot_grid(per_day, per_car) 

```

## Gating Strategies

```{r fig.width=18, fig.height=7}

## First, set the cutoffs for each channel

# melt a sampled fcs set
fcs_melt_sample_dt <- melt(
  fcs_dt[, .SD[sample(.N, min(.N, 1000))], 
    by=c('well', 'plate', 'day')], 
  measure.vars=melt_cols)

# choose thresholds visually (plotted below)
marker_pos_threshold <- list(
  cd62l=flowJoTrans(inverse=T)(1750),
  cd27=flowJoTrans(inverse=T)(1800),
  ccr7=flowJoTrans(inverse=T)(1050),
  cd45ro=flowJoTrans(inverse=T)(800),
  cd45ra=flowJoTrans(inverse=T)(900),
  cd95=flowJoTrans(inverse=T)(2100))

marker_thresh_dt <- data.table(
  variable= paste0(names(marker_pos_threshold),'_t'),
  threshold= flowJoTrans()(unlist(marker_pos_threshold)))

# assess marker thresholds
ggplot(fcs_melt_sample_dt[
    variable %in% paste0(names(channel_map),'_t')]) + 
  geom_density(aes(x=value, color=factor(day), linetype=k562)) + 
  scale_x_continuous(limits=c(-1000,5000)) +
  facet_grid(k562~variable, scale='free') + 
  scale_color_manual(values=brewer.pal(7, "YlGnBu")[3:7]) +
  geom_vline(data=marker_thresh_dt, aes(xintercept=threshold))
```

## Examine pairs of markers
```{r, fig.width=18, fig.height=7}

fcs_melt_sample_dt <- melt(
  fcs_dt[, .SD[sample(.N, min(.N, 1000))], 
    by=c('well', 'plate', 'day')], 
  measure.vars=melt_cols)

# this function assigned 'none' k562 group to baseline day 0
map_day_0 <- function(df) {
  return(rbind(
    df[k562!='none'],
    df[k562=='none'][, k562 := 'cd19+'],
    df[k562=='none'][, k562 := 'cd19-']
  ))
}

cast_vars <- function(df, cast_vars) {
  return(
    dcast(map_day_0(df[variable %in% cast_vars]), 
      well + plate + day + car + k562 + donor + event_id ~ variable,
      value.var='value'))
}

plot_2d_density_vars <- function(df, x_var, y_var) {

  cast_dt <- cast_vars(df, cast_vars=c(x_var, y_var))
  
  x_threshold <- marker_thresh_dt[variable==x_var, threshold]
  y_threshold <- marker_thresh_dt[variable==y_var, threshold]
  
  thresh_dt <- cast_dt[, melt(table(
    x_thresh= (get(x_var) > x_threshold),
    y_thresh= (get(y_var) > y_threshold))),
    by=c('k562','car')]
  
  thresh_dt[, frac := value/sum(value), by=c('k562','car')]
  
  quadrant_labels <- data.table(
    x=c(Inf,Inf,-Inf,-Inf),
    y=c(Inf,-Inf,Inf,-Inf),
    x_thresh=c(T, T, F, F),
    y_thresh=c(T, F, T, F),
    hjust=c(1,1,0,0),
    vjust=c(1,0,1,0)
  )
  
  thresh_dt <- thresh_dt[quadrant_labels, on=c('x_thresh','y_thresh')]
  thresh_dt[, pct := percent(frac)]
  
  plot <- ggplot(cast_dt) + 
    geom_density2d(aes(y=get(y_var), x=get(x_var)), n=200) + 
    facet_grid(k562~car) + 
    scale_x_continuous(limits=c(-1000,4000)) + 
    scale_y_continuous(limits=c(-1000,4000)) + 
    geom_vline(xintercept=x_threshold) + 
    geom_hline(yintercept=y_threshold) +
    geom_text(data=thresh_dt, aes(x=x, y=y, label=pct, hjust=hjust, vjust=vjust))
  
  return(plot)
}

plot_2d_density_vars_split_donor <- function(df, x_var, y_var) {

  cast_dt <- cast_vars(df, cast_vars=c(x_var, y_var))
  
  x_threshold <- marker_thresh_dt[variable==x_var, threshold]
  y_threshold <- marker_thresh_dt[variable==y_var, threshold]
  
  thresh_dt <- cast_dt[, melt(table(
    x_thresh= (get(x_var) > x_threshold),
    y_thresh= (get(y_var) > y_threshold))),
    by=c('k562','car','donor')]
  
  thresh_dt[, frac := value/sum(value), by=c('k562','car','donor')]
  
  quadrant_labels <- data.table(
    x=c(Inf,Inf,-Inf,-Inf),
    y=c(Inf,-Inf,Inf,-Inf),
    x_thresh=c(T, T, F, F),
    y_thresh=c(T, F, T, F),
    hjust=c(1,1,0,0),
    vjust=c(1,0,1,0)
  )
  
  thresh_dt <- thresh_dt[quadrant_labels, on=c('x_thresh','y_thresh')]
  thresh_dt[, pct := percent(frac)]
  
  plot <- ggplot(cast_dt) + 
    geom_density2d(aes(y=get(y_var), x=get(x_var)), n=200) + 
    facet_grid(k562+donor~car) + 
    scale_x_continuous(limits=c(-1000,4000)) + 
    scale_y_continuous(limits=c(-1000,4000)) + 
    geom_vline(xintercept=x_threshold) + 
    geom_hline(yintercept=y_threshold) +
    geom_text(data=thresh_dt, aes(x=x, y=y, label=pct, hjust=hjust, vjust=vjust))
  
  return(plot)
}


plot_2d_density_vars(fcs_melt_sample_dt[day==6], y_var='ccr7_t', x_var='cd45ro_t') +
  labs(x='CD45RO', y='CCR7',title='Day 6 CCR7 vs CD45RO Diff')

plot_2d_density_vars(fcs_melt_sample_dt[day==33], y_var='ccr7_t', x_var='cd45ra_t') +
  labs(x='CD45RA', y='CCR7',title='Day 33 CCR7 vs CD45RA Diff')

plot_2d_density_vars(fcs_melt_sample_dt[day==6], y_var='cd45ra_t', x_var='cd62l_t') +
  labs(y='CD45RA', x='CD62L',title='Day 6 CD45RA vs CD62L Diff')

plot_2d_density_vars(fcs_melt_sample_dt[day==6], y_var='cd45ra_t', x_var='cd45ro_t') +
  labs(y='CD45RA', x='CD45RO',title='Day 6 CD45RO vs CD45RA')

plot_2d_density_vars(fcs_melt_sample_dt[day==33], x_var='cd45ro_t', y_var='cd27_t') +
  labs(x='CD45RO', y='CD27',title='Day 33 CD45RO vs CD27 Diff')


fcs_flags <- fcs_dt[,
  list( 
    car, donor, day, k562, Time, well, plate, event_id,
    cd62l= cd62l > marker_pos_threshold$cd62l,
    cd27= cd27 > marker_pos_threshold$cd27,
    ccr7= ccr7 > marker_pos_threshold$ccr7,
    cd45ro= cd45ro > marker_pos_threshold$cd45ro,
    cd45ra= cd45ra > marker_pos_threshold$cd45ra,
    cd95= cd95 > marker_pos_threshold$cd95)]

fcs_flags[,
  `:=`(
    cd62_cd45ra_diff= factor(
      cd62l + 2*cd45ra),
    cd45ra_ccr7_diff= factor(
      cd45ra + 2*ccr7),
    cd45ro_ccr7_diff= factor(
      cd45ro + 2*ccr7),
    cd45ro_cd27_diff= factor(
      cd45ro + 2*cd27),
    cd62_cd27_diff= factor(
      cd62l + 2*cd27)
    )]


levels(fcs_flags$cd62_cd45ra_diff) <- c('TEM','TCM','TEMRA','Naive')
levels(fcs_flags$cd45ra_ccr7_diff) <- c('TEM','TEMRA','TCM','Naive')
levels(fcs_flags$cd45ro_ccr7_diff) <- c('TEMRA','TEM','Naive','TCM')
levels(fcs_flags$cd45ro_cd27_diff) <- c(
  'CD45RO-/CD27-','CD45RO+/CD27-','CD45RO-/CD27+','CD45RO+/CD27+')
levels(fcs_flags$cd62_cd27_diff) <- c(
  'CD62L-/CD27-','CD62L+/CD27-','CD62L-/CD27+','CD62L+/CD27+')

diff_marker_dt <- melt.data.table(
    fcs_flags,
    measure.vars= c(
        'cd62_cd45ra_diff', 'cd45ro_ccr7_diff', 'cd45ra_ccr7_diff',
        'cd45ro_cd27_diff', 'cd62_cd27_diff',
        'cd62l', 'cd27', 'ccr7', 'cd45ro', 'cd45ra', 'cd95'))

```

### Diff Plot Functions

```{r, fig.width=18, fig.height=7}

make_diff_percent_dt <- function(dt, diff_set) {
  
  subset_dt <- map_day_0(
    dcast(dt[variable == diff_set],
    ... ~ variable, value.var='value'))
  subset_dt[, c(diff_set) := factor(get(diff_set))]
  
  subset_dt <- subset_dt[, 
    melt(table(get(diff_set))),
    by=c('car', 'donor', 'day', 'k562', 'well', 'plate')][,
      frac := value/sum(value),
      by=c('car', 'donor', 'day', 'k562', 'well', 'plate')]
  names(subset_dt) <- gsub('V1', 'value', names(subset_dt))
  names(subset_dt) <- gsub('Var1', 'diff', names(subset_dt))
  
  diff_mean_dt <- subset_dt[!is.na(donor), list(
      val_mean= mean(frac), 
      val_sd= sd(frac)), 
      by=c('car','k562','donor','day','diff')]

  return(diff_mean_dt)
}

cd62_cd45ra_diff_dt <- make_diff_percent_dt(diff_marker_dt, 'cd62_cd45ra_diff')
cd45ra_ccr7_diff_dt <- make_diff_percent_dt(diff_marker_dt, 'cd45ra_ccr7_diff')
cd45ro_ccr7_diff_dt <- make_diff_percent_dt(diff_marker_dt, 'cd45ro_ccr7_diff')
cd45ro_cd27_diff_dt <- make_diff_percent_dt(diff_marker_dt, 'cd45ro_cd27_diff')
cd27_dt <- make_diff_percent_dt(diff_marker_dt, 'cd27')
cd95_dt <- make_diff_percent_dt(diff_marker_dt, 'cd95')


plot_by_day <- function(diff_mean_dt, title) {
  return(ggplot(diff_mean_dt) + 
      geom_bar(aes(x=as.factor(day), y=val_mean, fill=diff), stat='identity', position='stack') +
      facet_grid(k562+donor~car) + 
    theme_minimal(base_size=18) + 
    labs(x='Day', y='% Subset', title=title))
}

line_plot_by_day <- function(diff_mean_dt, title) {
  return(ggplot(diff_mean_dt, 
      aes(x=as.factor(day), y=val_mean, color=car, group=car, 
          ymax=val_mean+val_sd, ymin=val_mean-val_sd)) + 
    geom_line() + geom_point(size=2) + geom_linerange() +
    facet_grid(k562+diff~donor) + 
    scale_color_brewer(palette='Dark2') +
    theme_minimal(base_size=18))
}

plot_by_car <- function(diff_mean_dt, title) {
  return(ggplot(diff_mean_dt[car != 'untrans']) + 
      geom_bar(aes(x=car, y=val_mean, fill=diff), stat='identity', position='stack') +
      facet_grid(k562+donor~day) + 
    theme_minimal(base_size=18) + 
    labs(x='Day', y='% Subset', title=title) + 
    coord_flip())
}

plot_by_day(cd62_cd45ra_diff_dt[k562=='cd19+'], 'CD62L vs CD45RA differentiation')
plot_by_day(cd45ra_ccr7_diff_dt[k562=='cd19+'], 'CD45RA vs CCR7 differentiation')
plot_by_day(cd45ro_ccr7_diff_dt[k562=='cd19+'], 'CD45RO vs CCR7 differentiation')
    
plot_by_car(cd62_cd45ra_diff_dt[k562=='cd19+'], 'CD62L vs CD45RA differentiation')
plot_by_car(cd45ra_ccr7_diff_dt[k562=='cd19+'], 'CD45RA vs CCR7 differentiation')
plot_by_car(cd45ro_ccr7_diff_dt[k562=='cd19+'], 'CD45RO vs CCR7 differentiation')

plot_by_car(cd45ro_cd27_diff_dt[k562=='cd19+'], 'CD45RO vs CD27 differentiation')
```

```{r, fig.width=18, fig.height=14}
plot_by_day(cd27_dt, title= '% CD27 positive')
plot_by_car(cd27_dt, title= '% CD27 positive')

line_plot_by_day(cd27_dt[diff==T & car != 'KLRG1'], title= '% CD27 positive')

line_plot_by_day(cd95_dt[diff==T], title= '% CD95 positive')
```

# Plots for Kole 8/13

```{r, fig.width=18, fig.height=7}

cd27_dt_subset <- cd27_dt[k562=='cd19+' & diff == T &
  car %in% c('41BB','CD28','BAFF-R','CD40','untrans')][,
    car := factor(
      car,
      levels(factor(car))[c(3,1,2,4,5)],
      labels=c(levels(factor(car))[c(3,1,2,4)],'Untransduced'))]

ggplot(cd27_dt_subset) + 
    geom_bar(aes(x=as.factor(day), y=val_mean, fill=diff), stat='identity', position='stack') +
    facet_grid(donor~car) + 
    theme_minimal(base_size=18) + 
    labs(x='Day', y='Fraction of Cells', title='CD45RO vs CCR7 differentiation') +
    scale_y_continuous(expand=c(0,0), labels = percent_format(accuracy = 1)) + 
    scale_x_discrete(expand=c(0,0)) +
    scale_fill_brewer('Differentiation\nSubset', palette='PiYG', direction=-1) + 
    theme_minimal(base_size=18) + theme(panel.spacing.x = unit(3, "lines")) +
    geom_hline(yintercept=0, size=2) +
    theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())

ggplot(cd45ro_cd27_diff_dt[k562=='cd19+' & diff == 'CD45RO-/CD27+' & car %in% c('41BB','CD28','BAFF-R','CD40') & day == 33 & donor == 2]) + 
    geom_bar(aes(x=car, y=val_mean, fill=factor(donor)), stat='identity', position='dodge') +
    theme_minimal(base_size=18) +
    labs(x='CAR', y='Fraction of Cells', title='% CD45RO-/CD27+, Day 33') +
    scale_y_continuous(expand=c(0,0), labels = percent_format(accuracy = 1)) + 
    scale_x_discrete(expand=c(0,0)) +
    scale_fill_brewer('Differentiation\nSubset', palette='Paired', direction=-1, guide=F) + 
    theme_minimal(base_size=18) + theme(panel.spacing.x = unit(3, "lines")) +
    geom_hline(yintercept=0, size=2) +
    theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())

# both donors averaged, car subset only
# for kole 8/13

cd45ro_ccr7_diff_subset_dt <- cd45ro_ccr7_diff_dt[k562=='cd19+' & 
  car %in% c('41BB','CD28','BAFF-R','CD40','untrans')][,
    car := factor(
      car,
      levels(factor(car))[c(3,1,2,4,5)],
      labels=c(levels(factor(car))[c(3,1,2,4)],'Untransduced'))]

ggplot(cd45ro_ccr7_diff_subset_dt[, val_comb := mean(val_mean, na.rm=T), by=c('day','diff','car')]) + 
    geom_bar(aes(x=as.factor(day), y=val_comb/2, fill=diff), stat='identity', position='stack') +
    facet_grid(.~car) + 
    theme_minimal(base_size=18) + 
    labs(x='Day', y='Fraction of Cells', title='CD45RO vs CCR7 differentiation') +
    scale_y_continuous(expand=c(0,0), labels = percent_format(accuracy = 1)) + 
    scale_x_discrete(expand=c(0,0)) +
    scale_fill_brewer('Differentiation\nSubset', palette='PiYG', direction=-1) + 
    theme_minimal(base_size=18) + theme(panel.spacing.x = unit(3, "lines")) +
    geom_hline(yintercept=0, size=2) +
    theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
```
